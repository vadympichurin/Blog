{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\src\\\\Components\\\\PostDescription\\\\PostDescription.js\";\nimport React, { Component, Fragment } from 'react';\nimport { getDataCommentsAsync } from '../../redux/actions/getDataComments';\nimport { connect } from 'react-redux';\nimport InputComment from '../InputComment/InputComment';\nimport axios from 'axios';\n\nvar PostDescription =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostDescription, _Component);\n\n  function PostDescription() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostDescription);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostDescription)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputValueComm: '',\n      newComment: {}\n    };\n\n    _this.onePostComments = function () {\n      return _this.props.dataComments.map(function (el) {\n        return +el.postId === +_this.props.id ? React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, el.body) : null;\n      });\n    };\n\n    _this.onePost = function () {\n      return _this.props.dataPosts.map(function (el) {\n        return +el.id === +_this.props.id ? React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, el.title), \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, el.body)) : null;\n      });\n    };\n\n    _this.inputChange = function (event) {\n      var inputTextCom = event.target.value;\n\n      _this.setState({\n        inputValueComm: inputTextCom\n      });\n    };\n\n    _this.addComment = function (event) {\n      var newComment = {\n        postId: _this.props.id,\n        body: _this.state.inputValueComm\n      };\n\n      _this.setState({\n        newComment: newComment,\n        inputValueComm: ''\n      }, _this.postNewComment(newComment));\n\n      console.log(newComment);\n    };\n\n    _this.postNewComment = function (obj) {\n      var config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        } // headerData: [\n        //     {\n        //         \"key\": \"Content-Type\",\n        //         \"value\": \"application/json\",\n        //         \"description\": \"3333333\",\n        //         \"enabled\": true\n        //     }\n        // ],\n\n      };\n      axios.post(\"http://localhost:3001/comments\", {\n        postId: obj.postId,\n        body: obj.body\n      }, config); // axios.post(\"http://localhost:3001/comments\",{postId: 3, body: \"sfsdfsdf\"},config)\n      // ------------------------------------------------------------------\n      //   let config = {\n      //     method: 'post',\n      //     headers: {\n      //         \"Content-Type\": \"application/json\\n\",\n      //     }\n      //   };\n      //   axios.post(\"http://localhost:3001/comments\", config)\n      // -----------------------------------------------------------------------\n      //   axios({\n      //       method: 'post',\n      //       url: `http://localhost:3001/comments`,\n      //       data: this.state.newComment,\n      //   })\n    };\n\n    return _this;\n  }\n\n  _createClass(PostDescription, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getDataComments();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          dataPosts = _this$props.dataPosts,\n          dataComments = _this$props.dataComments;\n      var showComments = this.onePostComments();\n      var showPost = this.onePost();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(InputComment, {\n        inputChange: this.inputChange,\n        addComment: this.addComment,\n        inputValueComm: this.state.inputValueComm,\n        postNewComment: this.postNewComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), showPost, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, showComments));\n    }\n  }]);\n\n  return PostDescription;\n}(Component);\n\nvar MSTP = function MSTP(state) {\n  return {\n    dataPosts: state.dataPosts,\n    dataComments: state.dataComments\n  };\n};\n\nvar MDTP = function MDTP(dispatch) {\n  return {\n    getDataComments: function getDataComments() {\n      dispatch(getDataCommentsAsync());\n    }\n  };\n};\n\nexport default connect(MSTP, MDTP)(PostDescription);","map":{"version":3,"sources":["C:\\Users\\Vadim\\Desktop\\GoIT\\-=Tasks=-\\task-blog\\front-end\\blog\\src\\Components\\PostDescription\\PostDescription.js"],"names":["React","Component","Fragment","getDataCommentsAsync","connect","InputComment","axios","PostDescription","state","inputValueComm","newComment","onePostComments","props","dataComments","map","el","postId","id","body","onePost","dataPosts","title","inputChange","event","inputTextCom","target","value","setState","addComment","postNewComment","console","log","obj","config","headers","post","getDataComments","showComments","showPost","MSTP","MDTP","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,oBAAR,QAAmC,qCAAnC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAGMC,e;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,cAAc,EAAE,EADZ;AAEJC,MAAAA,UAAU,EAAE;AAFR,K;;UASRC,e,GAAkB,YAAM;AACtB,aAAO,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,UAAAC,EAAE;AAAA,eAAI,CAACA,EAAE,CAACC,MAAJ,KAAe,CAAC,MAAKJ,KAAL,CAAWK,EAA3B,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,EAAE,CAACG,IAAR,CAAhC,GAAqD,IAAzD;AAAA,OAA9B,CAAP;AACD,K;;UAEDC,O,GAAU,YAAM;AACZ,aAAO,MAAKP,KAAL,CAAWQ,SAAX,CAAqBN,GAArB,CAAyB,UAAAC,EAAE;AAAA,eAAI,CAACA,EAAE,CAACE,EAAJ,KAAW,CAAC,MAAKL,KAAL,CAAWK,EAAvB,GACjC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,EAAE,CAACM,KAAR,CAAV,OAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIN,EAAE,CAACG,IAAP,CAA9B,CADiC,GAE5B,IAFwB;AAAA,OAA3B,CAAP;AAGH,K;;UAELI,W,GAAc,UAACC,KAAD,EAAW;AACrB,UAAIC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAhC;;AACA,YAAKC,QAAL,CAAe;AACXlB,QAAAA,cAAc,EAAEe;AADL,OAAf;AAGD,K;;UAEGI,U,GAAa,UAACL,KAAD,EAAW;AACtB,UAAIb,UAAU,GAAG;AACbM,QAAAA,MAAM,EAAE,MAAKJ,KAAL,CAAWK,EADN;AAEbC,QAAAA,IAAI,EAAE,MAAKV,KAAL,CAAWC;AAFJ,OAAjB;;AAIA,YAAKkB,QAAL,CACI;AACIjB,QAAAA,UAAU,EAAEA,UADhB;AAEID,QAAAA,cAAc,EAAE;AAFpB,OADJ,EAIO,MAAKoB,cAAL,CAAoBnB,UAApB,CAJP;;AAMAoB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,UAAZ;AACD,K;;UAEDmB,c,GAAiB,UAACG,GAAD,EAAS;AAExB,UAAIC,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SADA,CAIT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXS,OAAb;AAcA5B,MAAAA,KAAK,CAAC6B,IAAN,CAAW,gCAAX,EAA4C;AAACnB,QAAAA,MAAM,EAAEgB,GAAG,CAAChB,MAAb;AAAqBE,QAAAA,IAAI,EAAEc,GAAG,CAACd;AAA/B,OAA5C,EAAiFe,MAAjF,EAhBwB,CAkBxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAER;AAEQ;AACA;AACA;AACA;AACA;AACD,K;;;;;;;wCAvEiB;AAChB,WAAKrB,KAAL,CAAWwB,eAAX;AACH;;;6BAwES;AAAA,wBACgC,KAAKxB,KADrC;AAAA,UACCK,EADD,eACCA,EADD;AAAA,UACKG,SADL,eACKA,SADL;AAAA,UACgBP,YADhB,eACgBA,YADhB;AAGN,UAAMwB,YAAY,GAAG,KAAK1B,eAAL,EAArB;AAEA,UAAM2B,QAAQ,GAAG,KAAKnB,OAAL,EAAjB;AAGJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAKG,WAAhC;AAA6C,QAAA,UAAU,EAAE,KAAKM,UAA9D;AAA0E,QAAA,cAAc,EAAE,KAAKpB,KAAL,CAAWC,cAArG;AAAqH,QAAA,cAAc,EAAE,KAAKoB,cAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAUIS,QAVJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,YADL,CAZJ,CADJ;AAoBH;;;;EA7G6BpC,S;;AAgH9B,IAAMsC,IAAI,GAAG,SAAPA,IAAO,CAAA/B,KAAK;AAAA,SAAK;AACnBY,IAAAA,SAAS,EAAEZ,KAAK,CAACY,SADE;AAEnBP,IAAAA,YAAY,EAAEL,KAAK,CAACK;AAFD,GAAL;AAAA,CAAlB;;AAKA,IAAM2B,IAAI,GAAG,SAAPA,IAAO,CAAAC,QAAQ;AAAA,SAAK;AACtBL,IAAAA,eAAe,EAAE,2BAAM;AACnBK,MAAAA,QAAQ,CAACtC,oBAAoB,EAArB,CAAR;AACH;AAHqB,GAAL;AAAA,CAArB;;AAMA,eAAeC,OAAO,CAACmC,IAAD,EAAMC,IAAN,CAAP,CAAmBjC,eAAnB,CAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {getDataCommentsAsync} from '../../redux/actions/getDataComments';\r\nimport {connect} from 'react-redux';\r\nimport InputComment from '../InputComment/InputComment';\r\nimport axios from 'axios';\r\n\r\n\r\nclass PostDescription extends Component {\r\n\r\n    state = {\r\n        inputValueComm: '',\r\n        newComment: {},\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getDataComments();\r\n    }\r\n\r\n    onePostComments = () => {\r\n      return this.props.dataComments.map(el => +el.postId === +this.props.id ? <li>{el.body}</li> : null)\r\n    }\r\n\r\n    onePost = () => {\r\n        return this.props.dataPosts.map(el => +el.id === +this.props.id ? \r\n            (<Fragment><h3>{el.title}</h3> <p>{el.body}</p></Fragment>)\r\n                : null)\r\n    }\r\n\r\ninputChange = (event) => {\r\n    let inputTextCom = event.target.value;\r\n    this.setState ({\r\n        inputValueComm: inputTextCom\r\n    })\r\n  };\r\n    \r\n      addComment = (event) => {\r\n        let newComment = {\r\n            postId: this.props.id,\r\n            body: this.state.inputValueComm,\r\n        };\r\n        this.setState (\r\n            {\r\n                newComment: newComment,\r\n                inputValueComm: '',\r\n            }, this.postNewComment(newComment)\r\n        )\r\n        console.log(newComment);\r\n      };\r\n\r\n      postNewComment = (obj) => {\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            // headerData: [\r\n            //     {\r\n            //         \"key\": \"Content-Type\",\r\n            //         \"value\": \"application/json\",\r\n            //         \"description\": \"3333333\",\r\n            //         \"enabled\": true\r\n            //     }\r\n            // ],\r\n        }\r\n\r\n        axios.post(\"http://localhost:3001/comments\",{postId: obj.postId, body: obj.body},config)\r\n\r\n        // axios.post(\"http://localhost:3001/comments\",{postId: 3, body: \"sfsdfsdf\"},config)\r\n\r\n        // ------------------------------------------------------------------\r\n        //   let config = {\r\n        //     method: 'post',\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\\n\",\r\n        //     }\r\n        //   };\r\n        //   axios.post(\"http://localhost:3001/comments\", config)\r\n\r\n// -----------------------------------------------------------------------\r\n\r\n        //   axios({\r\n        //       method: 'post',\r\n        //       url: `http://localhost:3001/comments`,\r\n        //       data: this.state.newComment,\r\n        //   })\r\n      }\r\n       \r\n\r\n    render () {\r\n        const {id, dataPosts, dataComments} = this.props;\r\n\r\n        const showComments = this.onePostComments();\r\n\r\n        const showPost = this.onePost();\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <InputComment inputChange={this.inputChange} addComment={this.addComment} inputValueComm={this.state.inputValueComm} postNewComment={this.postNewComment} />\r\n\r\n        \r\n            {/* <h3>{dataComments.map(el => +el.postId === +id ? el.body : null)}</h3> */}\r\n            {/* <h3>{res}</h3> */}\r\n\r\n\r\n\r\n           {showPost}\r\n\r\n            <ul>\r\n                {showComments}\r\n            </ul>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst MSTP = state => ({\r\n    dataPosts: state.dataPosts,\r\n    dataComments: state.dataComments,\r\n})\r\n\r\nconst MDTP = dispatch => ({\r\n    getDataComments: () => {\r\n        dispatch(getDataCommentsAsync())\r\n    },\r\n})\r\n\r\nexport default connect(MSTP,MDTP)(PostDescription);"]},"metadata":{},"sourceType":"module"}