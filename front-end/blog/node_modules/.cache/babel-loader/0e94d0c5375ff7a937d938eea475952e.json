{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\GoIT\\\\-=Tasks=-\\\\task-blog\\\\front-end\\\\blog\\\\src\\\\Components\\\\PostDescription\\\\PostDescription.js\";\nimport React, { Component, Fragment } from 'react';\nimport { getDataCommentsAsync } from '../../redux/actions/getDataComments';\nimport { connect } from 'react-redux';\nimport InputComment from '../InputComment/InputComment';\n\nvar PostDescription =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostDescription, _Component);\n\n  function PostDescription() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostDescription);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostDescription)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onePostComments = function () {\n      return _this.props.dataComments.map(function (el) {\n        return +el.postId === +_this.props.id ? React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, el.body) : null;\n      });\n    };\n\n    _this.onePost = function () {\n      return _this.props.dataPosts.map(function (el) {\n        return +el.id === +_this.props.id ? React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, el.title), \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, el.body)) : null;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostDescription, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      {\n        this.props.getDataComments();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          dataPosts = _this$props.dataPosts,\n          dataComments = _this$props.dataComments;\n      var showComments = this.onePostComments();\n      var showPost = this.onePost();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, showPost, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, showComments));\n    }\n  }]);\n\n  return PostDescription;\n}(Component);\n\nvar MSTP = function MSTP(state) {\n  return {\n    dataPosts: state.dataPosts,\n    dataComments: state.dataComments\n  };\n};\n\nvar MDTP = function MDTP(dispatch) {\n  return {\n    getDataComments: function getDataComments() {\n      dispatch(getDataCommentsAsync());\n    }\n  };\n};\n\nexport default connect(MSTP, MDTP)(PostDescription);","map":{"version":3,"sources":["C:\\Users\\Vadim\\Desktop\\GoIT\\-=Tasks=-\\task-blog\\front-end\\blog\\src\\Components\\PostDescription\\PostDescription.js"],"names":["React","Component","Fragment","getDataCommentsAsync","connect","InputComment","PostDescription","onePostComments","props","dataComments","map","el","postId","id","body","onePost","dataPosts","title","getDataComments","showComments","showPost","MSTP","state","MDTP","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,oBAAR,QAAmC,qCAAnC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;IAEMC,e;;;;;;;;;;;;;;;;;;UAMFC,e,GAAkB,YAAM;AACtB,aAAO,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,UAAAC,EAAE;AAAA,eAAI,CAACA,EAAE,CAACC,MAAJ,KAAe,CAAC,MAAKJ,KAAL,CAAWK,EAA3B,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,EAAE,CAACG,IAAR,CAAhC,GAAqD,IAAzD;AAAA,OAA9B,CAAP;AACD,K;;UAEDC,O,GAAU,YAAM;AACZ,aAAO,MAAKP,KAAL,CAAWQ,SAAX,CAAqBN,GAArB,CAAyB,UAAAC,EAAE;AAAA,eAAI,CAACA,EAAE,CAACE,EAAJ,KAAW,CAAC,MAAKL,KAAL,CAAWK,EAAvB,GACjC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,EAAE,CAACM,KAAR,CAAV,OAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIN,EAAE,CAACG,IAAP,CAA9B,CADiC,GAE5B,IAFwB;AAAA,OAA3B,CAAP;AAGH,K;;;;;;;wCAZmB;AAChB;AAAC,aAAKN,KAAL,CAAWU,eAAX;AAA6B;AACjC;;;6BAcS;AAAA,wBACgC,KAAKV,KADrC;AAAA,UACCK,EADD,eACCA,EADD;AAAA,UACKG,SADL,eACKA,SADL;AAAA,UACgBP,YADhB,eACgBA,YADhB;AAGN,UAAMU,YAAY,GAAG,KAAKZ,eAAL,EAArB;AAEA,UAAMa,QAAQ,GAAG,KAAKL,OAAL,EAAjB;AAGJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQIK,QARJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,YADL,CAVJ,CADJ;AAkBH;;;;EA5C6BlB,S;;AA+C9B,IAAMoB,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAAK;AACnBN,IAAAA,SAAS,EAAEM,KAAK,CAACN,SADE;AAEnBP,IAAAA,YAAY,EAAEa,KAAK,CAACb;AAFD,GAAL;AAAA,CAAlB;;AAKA,IAAMc,IAAI,GAAG,SAAPA,IAAO,CAAAC,QAAQ;AAAA,SAAK;AACtBN,IAAAA,eAAe,EAAE,2BAAM;AACnBM,MAAAA,QAAQ,CAACrB,oBAAoB,EAArB,CAAR;AACH;AAHqB,GAAL;AAAA,CAArB;;AAMA,eAAeC,OAAO,CAACiB,IAAD,EAAME,IAAN,CAAP,CAAmBjB,eAAnB,CAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {getDataCommentsAsync} from '../../redux/actions/getDataComments';\r\nimport {connect} from 'react-redux';\r\nimport InputComment from '../InputComment/InputComment';\r\n\r\nclass PostDescription extends Component {\r\n\r\n    componentDidMount() {\r\n        {this.props.getDataComments()}\r\n    }\r\n\r\n    onePostComments = () => {\r\n      return this.props.dataComments.map(el => +el.postId === +this.props.id ? <li>{el.body}</li> : null)\r\n    }\r\n\r\n    onePost = () => {\r\n        return this.props.dataPosts.map(el => +el.id === +this.props.id ? \r\n            (<Fragment><h3>{el.title}</h3> <p>{el.body}</p></Fragment>)\r\n                : null)\r\n    }\r\n\r\n       \r\n\r\n    render () {\r\n        const {id, dataPosts, dataComments} = this.props;\r\n\r\n        const showComments = this.onePostComments();\r\n\r\n        const showPost = this.onePost();\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        \r\n            {/* <h3>{dataComments.map(el => +el.postId === +id ? el.body : null)}</h3> */}\r\n            {/* <h3>{res}</h3> */}\r\n\r\n\r\n\r\n           {showPost}\r\n\r\n            <ul>\r\n                {showComments}\r\n            </ul>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst MSTP = state => ({\r\n    dataPosts: state.dataPosts,\r\n    dataComments: state.dataComments,\r\n})\r\n\r\nconst MDTP = dispatch => ({\r\n    getDataComments: () => {\r\n        dispatch(getDataCommentsAsync())\r\n    },\r\n})\r\n\r\nexport default connect(MSTP,MDTP)(PostDescription);"]},"metadata":{},"sourceType":"module"}